package com.msis.app.domain.repository;

import com.msis.app.domain.entity.User;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Repository
public interface UserRepository extends JpaRepository<User, Long> {
    /**
     * Finds a user on the database by id.
     *
     * @param id the id auto-generated by Hibernate
     * @return the user found or an empty <i>Optional</i>
     */
    Optional<User> findById(Long id);

    /**
     * Finds a user on the database by username.
     *
     * @param username the username of a user
     * @return the user found or an empty <i>Optional</i>
     */
    Optional<User> findByUsername(String username);


    /**
     * Checks if a user exists on the database by username.
     *
     * @param username the username of a user
     * @return true if a user is found or false otherwise
     */
    Boolean existsByUsername(String username);

    @Cacheable("allUsers")
    List<User> findAll();

    @CacheEvict(value = "allUsers", allEntries = true)
    User save(User user);
}
